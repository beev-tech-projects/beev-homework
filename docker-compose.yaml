services:
  database:
    image: postgres:17.4
    restart: always
    shm_size: 256mb
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_DB: beev
      PGDATA: /var/lib/postgresql/data
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - beev-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 1G

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@admin.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin}
      PGADMIN_LISTEN_PORT: 80
    ports:
      - "8001:80"
    networks:
      - beev-network
    depends_on:
      - database
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 512M

  redis:
    image: redis:alpine
    restart: always
    command: redis-server --save 20 1 --loglevel warning
    ports:
      - "6379:6379"
    networks:
      - beev-network
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 256M

  redis-insight:
    image: redislabs/redisinsight:latest
    restart: always
    ports:
      - "8002:5540"
    networks:
      - beev-network
    volumes:
      - redis-insight_data:/db
    depends_on:
      - redis
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 512M

  # backend:
  #   build:
  #     context: .
  #     dockerfile: backend/Dockerfile
  #   restart: unless-stopped
  #   environment:
  #     - FRONTEND_URL=${FRONTEND_URL_PROD:-http://localhost:5173}
  #     - BACKEND_URL=${BACKEND_URL_PROD:-http://localhost:3000}
  #     - POSTGRES_HOST=database
  #     - POSTGRES_PORT=5432
  #     - POSTGRES_USER=${POSTGRES_USER_PROD:-postgres}
  #     - POSTGRES_PASSWORD=${POSTGRES_PASSWORD_PROD:-postgres}
  #     - POSTGRES_DB=${POSTGRES_DB_PROD:-beev}
  #     - PORT=${PORT_PROD:-3000}
  #     - NODE_ENV=production
  #   ports:
  #     - "${PORT_PROD:-3000}:${PORT_PROD:-3000}"
  #   networks:
  #     - beev-network
  #   depends_on:
  #     database:
  #       condition: service_healthy
  #     redis:
  #       condition: service_healthy
  #   deploy:
  #     resources:
  #       limits:
  #         cpus: '1'
  #         memory: 1G

  # frontend:
  #   build:
  #     context: .
  #     dockerfile: frontend/Dockerfile
  #     args:
  #       - VITE_API_URL=${BACKEND_URL_PROD:-http://localhost:3000}
  #       - VITE_FRONTEND_URL=${FRONTEND_URL_PROD:-http://localhost:5173}
  #       - VITE_NODE_ENV=production
  #   restart: unless-stopped
  #   ports:
  #     - "8000:8080"
  #   networks:
  #     - beev-network
  #   depends_on:
  #     - backend
  #   deploy:
  #     resources:
  #       limits:
  #         cpus: '0.5'
  #         memory: 512M

networks:
  beev-network:
    driver: bridge
    name: beev-network

volumes:
  postgres_data:
    name: beev_postgres_data
  pgadmin_data:
    name: beev_pgadmin_data
  redis_data:
    name: beev_redis_data
  redis-insight_data:
    name: beev_redis_insight_data
